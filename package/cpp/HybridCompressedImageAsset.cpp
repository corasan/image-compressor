#include "HybridCompressedImageAsset.hpp"
#include <NitroModules/Promise.hpp>

namespace margelo::nitro::imagecompressor {
  std::shared_ptr<Promise<bool>> HybridCompressedImageAsset::save() {
    auto promise = Promise<bool>::create();
#ifdef __APPLE__ // If on iOS

#if __has_include("ImageCompressor-Swift.h")
    bool result = ImageCompressor::saveImageToPhotos(_uri);
    if (result) {
      FileUtils::removeTmpFile(_uri);
    }
    promise->resolve(result);
    return promise;
#else
    promise->reject(std::make_exception_ptr(
        std::runtime_error("ImageCompressor's autogenerated JNI header cannot be found!")));
#endif // end if __has_include("ImageCompressor-Swift.h")

#else // If on Android
    bool result = ImageCompressor_jni::saveImageToPhotos(_uri);
    if (result) {
      FileUtils::removeTmpFile(_uri);
    }
    promise->resolve(result);
    return promise;

#endif // end ifdef __APPLE__
  }

} // namespace margelo::nitro::imagecompressor

